// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("DataAccess.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresa")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("DatumRodjenja")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prezime")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Slika")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Admini");
                });

            modelBuilder.Entity("DataAccess.Models.Dostavljac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresa")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("DatumRodjenja")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prezime")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Slika")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusNaloga")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("NaCekanju");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Dostavljaci");
                });

            modelBuilder.Entity("DataAccess.Models.Porudzbina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresa")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cena")
                        .HasPrecision(8, 2)
                        .HasColumnType("TEXT");

                    b.Property<int>("DostavljacId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Komentar")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("PotrosacId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("CekaDostavu");

                    b.Property<long>("TrajanjeDostave")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DostavljacId");

                    b.HasIndex("PotrosacId");

                    b.ToTable("Porudzbine");
                });

            modelBuilder.Entity("DataAccess.Models.PorudzbinaProizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Kolicina")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PorudzbinaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("PorudzbinaId", "ProizvodId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("PorudzbinaProizvod");
                });

            modelBuilder.Entity("DataAccess.Models.Potrosac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresa")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("DatumRodjenja")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("TEXT");

                    b.Property<string>("Ime")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prezime")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Slika")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Potrosaci");
                });

            modelBuilder.Entity("DataAccess.Models.Proizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cena")
                        .HasPrecision(8, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Naziv")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sastojci")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Proizvodi");
                });

            modelBuilder.Entity("DataAccess.Models.Porudzbina", b =>
                {
                    b.HasOne("DataAccess.Models.Dostavljac", "Dostavljac")
                        .WithMany("Porudzbine")
                        .HasForeignKey("DostavljacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Potrosac", "Narucilac")
                        .WithMany("Porudzbine")
                        .HasForeignKey("PotrosacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dostavljac");

                    b.Navigation("Narucilac");
                });

            modelBuilder.Entity("DataAccess.Models.PorudzbinaProizvod", b =>
                {
                    b.HasOne("DataAccess.Models.Porudzbina", "Porudzbina")
                        .WithMany("Proizvodi")
                        .HasForeignKey("PorudzbinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Proizvod", "Proizvod")
                        .WithMany("Porudzbine")
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Porudzbina");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("DataAccess.Models.Dostavljac", b =>
                {
                    b.Navigation("Porudzbine");
                });

            modelBuilder.Entity("DataAccess.Models.Porudzbina", b =>
                {
                    b.Navigation("Proizvodi");
                });

            modelBuilder.Entity("DataAccess.Models.Potrosac", b =>
                {
                    b.Navigation("Porudzbine");
                });

            modelBuilder.Entity("DataAccess.Models.Proizvod", b =>
                {
                    b.Navigation("Porudzbine");
                });
#pragma warning restore 612, 618
        }
    }
}
